"""add created_at

Revision ID: 0fb2db7d5071
Revises: 
Create Date: 2025-08-22 12:23:07.436099

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0fb2db7d5071'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    tables = ['book_club', 'book_club_reader', 'note', 'quote', 'review', 'suggested_book']
    for table in tables:
        op.add_column(table, sa.Column('created_at', sa.DateTime(), nullable=True))

    for table in tables:
        op.execute(f"UPDATE {table} SET created_at = CURRENT_TIMESTAMP WHERE created_at IS NULL")

    for table in tables:
        with op.batch_alter_table(table, recreate="always") as batch_op:
            batch_op.alter_column(
                "created_at",
                existing_type=sa.DateTime(),
                nullable=False,
                server_default=sa.text("(CURRENT_TIMESTAMP)"),
            )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('suggested_book', 'created_at')
    op.drop_column('review', 'created_at')
    op.drop_column('quote', 'created_at')
    op.drop_column('note', 'created_at')
    op.drop_column('book_club_reader', 'created_at')
    op.drop_column('book_club', 'created_at')
    # ### end Alembic commands ###
